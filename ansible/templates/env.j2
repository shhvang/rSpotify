# rSpotify Bot Environment Configuration
# Generated by Ansible for {{ environment }} environment
# Last Updated: {{ ansible_date_time.iso8601 }}

# ========================================
# Telegram Bot Configuration
# ========================================
# Bot token obtained from @BotFather
TELEGRAM_BOT_TOKEN={{ telegram_bot_token }}

# Owner's Telegram User ID for administrative access
OWNER_TELEGRAM_ID={{ owner_telegram_id }}

# ========================================
# Spotify API Configuration  
# ========================================
# Spotify Developer credentials from https://developer.spotify.com/dashboard
SPOTIFY_CLIENT_ID={{ spotify_client_id }}
SPOTIFY_CLIENT_SECRET={{ spotify_client_secret }}

# OAuth callback URL (must match Spotify app settings)
SPOTIFY_REDIRECT_URI=https://{{ domain_name }}/callback

# ========================================
# Encryption Configuration
# ========================================
# Fernet key for encrypting user OAuth tokens
# Generated with: from cryptography.fernet import Fernet; Fernet.generate_key()
ENCRYPTION_KEY={{ encryption_key }}

# ========================================
# Database Configuration
# ========================================
# MongoDB Atlas connection string
MONGODB_URI={{ mongodb_uri }}

# Database name for this bot instance
MONGODB_DATABASE=rspotify_bot_{{ environment }}

# ========================================
# DuckDNS Configuration
# ========================================
# DuckDNS token for dynamic DNS updates
DUCKDNS_TOKEN={{ duckdns_token }}

# DuckDNS subdomain (yourdomain.duckdns.org)
DUCKDNS_DOMAIN={{ duckdns_domain }}

# ========================================
# Web Callback Configuration
# ========================================
# Flask server for OAuth callbacks
FLASK_HOST=0.0.0.0
FLASK_PORT=8080
FLASK_SECRET_KEY={{ encryption_key }}

# ========================================
# Environment Configuration
# ========================================
# Environment type: development, staging, or production
ENVIRONMENT={{ environment }}

# Debug mode (true for staging, false for production)
{% if environment == 'production' %}
DEBUG=false
{% else %}
DEBUG=true
{% endif %}

# Logging level: DEBUG, INFO, WARNING, ERROR, CRITICAL
{% if environment == 'production' %}
LOG_LEVEL=INFO
{% else %}
LOG_LEVEL=DEBUG
{% endif %}

# ========================================
# Optional: Pastebin Configuration
# ========================================
# For error reporting (optional)
{% if pastebin_api_key is defined %}
PASTEBIN_API_KEY={{ pastebin_api_key }}
{% endif %}
{% if pastebin_user_key is defined %}
PASTEBIN_USER_KEY={{ pastebin_user_key }}
{% endif %}

# ========================================
# Rate Limiting Configuration
# ========================================
RATE_LIMIT_PER_MINUTE=10
RATE_LIMIT_BURST=5

# ========================================
# Cache Configuration
# ========================================
CACHE_TTL_SECONDS=1800